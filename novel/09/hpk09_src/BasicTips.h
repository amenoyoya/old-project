//--------------------------------------------------------------------------------------
//	BasicTips.h
//
//	ゲームの基本的な下受け関数などなど
//--------------------------------------------------------------------------------------

#include	<windows.h>
#include	<stdio.h>


//-------------------------------------------------------
//	よく使う定数など
//-------------------------------------------------------

#define	ON	1
#define OFF	0


//-------------------------------------------------------
//	外部定義
//-------------------------------------------------------

//extern	HINSTANCE	hinst;		//実行ファイルのインスタンスのハンドル
extern	HWND		win_hwnd;		//ウィンドウのハンドル
extern	HDC			win_hdc;		//hdc

//------------------------------------------------------
//	簡易MessageBox
//------------------------------------------------------

void msg(char *msg,char *title);

//-------------------------------------------------------
// HLS_bload()	簡易バイナリロード関数♪
//-------------------------------------------------------

extern int	HLS_bload(const char *f_name , char *buf);

//-------------------------------------------------------
// HLS_bsave()	簡易バイナリセーブ関数
//		
//-------------------------------------------------------

extern int	HLS_bsave(const char *f_name , char *buf , int size );


//----------------------------------------------------
//	HLS_random_reset()	
//
//  内蔵時計によって、乱数系列をランダムにセットする
//----------------------------------------------------
//#include	<time.h>
//#include    <stdlib.h>

extern void HLS_random_reset();

//----------------------------------------------------
//	int HLS_random(int val)	
//
//  0〜val-1の整数のランダム値を返す
//----------------------------------------------------

extern int HLS_random(int val);

//----------------------------------------------------
//	char *zenkaku_numi(int n)	
//
//	整数ｎを全角１０進文字列にする 
//----------------------------------------------------	

extern char *zenkaku_numi(int n);	/* 整数ｎを全角１０進文字列にする */

//----------------------------------------------------
//	char *hankaku_numi(int n)	
//
//	整数ｎを半角１０進文字列にする 
//----------------------------------------------------	

char *hankaku_numi(int n);	/* 整数ｎを半角１０進文字列にする */

//----------------------------------------------------
//	char *zenkaku_numLL(LONGLONG n)	
//
//	LONGLONG整数ｎを全角１０進文字列にする 
//----------------------------------------------------	

char *zenkaku_numLL(LONGLONG n);	/* LONGLONG整数ｎを全角１０進文字列にする */

//------------------------------------------------
//	文字列の先頭 n バイト分が等しいか判定する
//------------------------------------------------

extern bool str_top_cmp( char *str1, char *str2, int n );

//------------------------------------------------
//	int	HLS_dest_ptr(char *ptr1,char *ptr2)
//
//	ポインタ ptr1、ptr2 のメモリ内の距離を返す
//------------------------------------------------

extern int	HLS_dest_ptr(char *ptr1,char *ptr2);

//------------------------------------------------
//	int HLS_timer_start( DWORD *timer )
//
//	タイマーを初期化してカウント開始する。
//	HLS_timer_check() 関数とペアで使用。
//
//		DWORD *timer：カウント開始時刻を格納する変数。
//					  関数本体内で保持しないのは、複数
//					  タイマーの同時稼動を考慮した措置。
//		
//		戻り値      ：常に０
//------------------------------------------------

extern int HLS_timer_start( DWORD *timer );


//------------------------------------------------
//	int HLS_timer_check( DWORD timer , DWORD wait_time )
//
//	HLS_timer_start()でカウント開始してから指定時間
//  経過したかどうかを調べる。
//
//		DWORD timer	   ：カウント開始時刻を格納した変数。
//		DWORD wait_time：ウェイト時間(ミリ秒)
//
//		戻り値：true =指定時間経過した 
//				false=指定時間経過していない
//
//	   【使用方法】
//			DWORD	timer;
//
//			HLS_timer_start(&timer);	//カウント開始
//
//			while( HLS_timer_check(timer,100)==false );	//100ms経つまでウェイト
//------------------------------------------------	

extern int HLS_timer_check( DWORD timer , DWORD wait_time );


//-----------------------------------------------
//	RECT型変数の短縮記述用
//-----------------------------------------------

extern RECT MK_RECT(int sx,int sy,int ex,int ey);
	//	(sx,sy)-(ex,ey)の領域をセットしたRECT型変数を返す

//----------------------------------------
//	デバイス待ち用のウェイト
//----------------------------------------

extern void _Wait(int wait_time);

//----------------------------------------
//	画面の明るさを ｎ％ 暗くする
//----------------------------------------

extern void _G_brightness_down( HDC _hdc, int xpos,int ypos, int xsize, int ysize, int n );
	//由緒正しい？お作法で画面の明るさを下げる関数（目茶目茶遅いので実用性ゼロ TーT）

//===================================================
//	Windowを画面中心に移動する
//===================================================

extern int SetWinCenter(HWND hWnd);

//------------------------------------------------------
//	FPS
//------------------------------------------------------

extern void HLS_stc_FPS(HDC hdc);
	//	グラフィック画面に展開する形式のFPS表示（ちと重い？ ^^;）

extern void HLS_stc_FPS_off();		//FPS表示をクリア

// end of file
